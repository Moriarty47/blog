import{_ as e,p as a,q as d,a0 as h}from"./framework-5411b43d.js";const r={},i=h('<h2 id="实现" tabindex="-1"><a class="header-anchor" href="#实现" aria-hidden="true">#</a> 实现</h2><h3 id="diff-算法" tabindex="-1"><a class="header-anchor" href="#diff-算法" aria-hidden="true">#</a> Diff 算法</h3><h4 id="diff-算法局限与解决方案" tabindex="-1"><a class="header-anchor" href="#diff-算法局限与解决方案" aria-hidden="true">#</a> Diff 算法局限与解决方案</h4><h4 id="单一节点-diff" tabindex="-1"><a class="header-anchor" href="#单一节点-diff" aria-hidden="true">#</a> 单一节点 Diff</h4><h4 id="多节点-diff" tabindex="-1"><a class="header-anchor" href="#多节点-diff" aria-hidden="true">#</a> 多节点 Diff</h4><h3 id="状态更新" tabindex="-1"><a class="header-anchor" href="#状态更新" aria-hidden="true">#</a> 状态更新</h3><h4 id="update-与-updatequeue" tabindex="-1"><a class="header-anchor" href="#update-与-updatequeue" aria-hidden="true">#</a> <code>Update</code> 与 <code>updateQueue</code></h4><h4 id="update-优先级机制" tabindex="-1"><a class="header-anchor" href="#update-优先级机制" aria-hidden="true">#</a> <code>Update</code> 优先级机制</h4><h4 id="reactdom-render-执行流程" tabindex="-1"><a class="header-anchor" href="#reactdom-render-执行流程" aria-hidden="true">#</a> <code>ReactDOM.render</code> 执行流程</h4><h4 id="this-setstate-执行流程" tabindex="-1"><a class="header-anchor" href="#this-setstate-执行流程" aria-hidden="true">#</a> <code>this.setState</code> 执行流程</h4><h3 id="生命周期" tabindex="-1"><a class="header-anchor" href="#生命周期" aria-hidden="true">#</a> 生命周期</h3><h4 id="unsafe-componentwillxxx-钩子及替代方案" tabindex="-1"><a class="header-anchor" href="#unsafe-componentwillxxx-钩子及替代方案" aria-hidden="true">#</a> <code>UNSAFE_componentWillXXX</code> 钩子及替代方案</h4><h4 id="componentdidxxx-钩子" tabindex="-1"><a class="header-anchor" href="#componentdidxxx-钩子" aria-hidden="true">#</a> <code>componentDidXXX</code> 钩子</h4><h4 id="shouldcomponentupdate-钩子" tabindex="-1"><a class="header-anchor" href="#shouldcomponentupdate-钩子" aria-hidden="true">#</a> <code>shouldComponentUpdate</code> 钩子</h4><h3 id="hooks" tabindex="-1"><a class="header-anchor" href="#hooks" aria-hidden="true">#</a> Hooks</h3><h4 id="简易-usestate-实现" tabindex="-1"><a class="header-anchor" href="#简易-usestate-实现" aria-hidden="true">#</a> 简易 <code>useState</code> 实现</h4><h4 id="usestate-与-usereducer" tabindex="-1"><a class="header-anchor" href="#usestate-与-usereducer" aria-hidden="true">#</a> <code>useState</code> 与 <code>useReducer</code></h4><h4 id="useeffect-与-uselayouteffect" tabindex="-1"><a class="header-anchor" href="#useeffect-与-uselayouteffect" aria-hidden="true">#</a> <code>useEffect</code> 与 <code>useLayoutEffect</code></h4><h4 id="usememo-与-usecallback" tabindex="-1"><a class="header-anchor" href="#usememo-与-usecallback" aria-hidden="true">#</a> <code>useMemo</code> 与 <code>useCallback</code></h4><h4 id="useref" tabindex="-1"><a class="header-anchor" href="#useref" aria-hidden="true">#</a> <code>useRef</code></h4><h3 id="异步调度" tabindex="-1"><a class="header-anchor" href="#异步调度" aria-hidden="true">#</a> 异步调度</h3><h4 id="scheduler-实现" tabindex="-1"><a class="header-anchor" href="#scheduler-实现" aria-hidden="true">#</a> <code>Scheduler</code> 实现</h4><h4 id="lane-模型" tabindex="-1"><a class="header-anchor" href="#lane-模型" aria-hidden="true">#</a> <code>lane</code> 模型</h4><h4 id="更新的中断、继续与重置" tabindex="-1"><a class="header-anchor" href="#更新的中断、继续与重置" aria-hidden="true">#</a> 更新的中断、继续与重置</h4><h4 id="usetransition" tabindex="-1"><a class="header-anchor" href="#usetransition" aria-hidden="true">#</a> <code>useTransition</code></h4>',25),t=[i];function c(n,o){return a(),d("div",null,t)}const u=e(r,[["render",c],["__file","implementation.html.vue"]]);export{u as default};
