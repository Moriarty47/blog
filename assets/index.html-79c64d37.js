import{_ as n,M as s,p as i,q as d,Q as o,t,N as l,V as c,a0 as r}from"./framework-5411b43d.js";const _={},a=r('<h2 id="ecmascript-262" tabindex="-1"><a class="header-anchor" href="#ecmascript-262" aria-hidden="true">#</a> ECMAScript-262</h2><p>ECMAScript-262 定义了这门语言的以下几个部分：</p><ul><li>语法</li><li>类型</li><li>语句</li><li>关键字</li><li>保留字</li><li>操作符</li><li>全局对象</li></ul><p>ECMAScript 和 JavaScript 的关系是，前者是后者的规范，后者是前者的一种实现(其他实现如 JScript 和 ActionScript)。</p>',4),u=o("code",null,"function *g() {}",-1),p=o("code",null,"() => {}",-1),h=o("code",null,"Array.prototype.includes",-1),S=o("code",null,"async/await",-1),E=o("code",null,"SharedArrayBuffer",-1),m=o("code",null,"Object.values()",-1),A=o("code",null,"Object.entries()",-1),y=o("code",null,"Object.getOwnPropertyDescriptors()",-1),f=o("code",null,"Promise.finally()",-1),M=o("code",null,"Array.prototype.flat()/flatMap()",-1),C=o("code",null,"String.prototype.trimStart()/trimEnd()",-1),g=o("code",null,"Object.fromEntries()",-1),k=o("code",null,"Symbol.prototype.description",-1),B=o("code",null,"Function.prototype.toString()",-1),b=o("code",null,"Array.prototype.sort()",-1),x=o("code",null,"import",-1),J=o("code",null,[t("i"),o("wbr"),t("mport.meta")],-1),O=o("code",null,"export",-1),w=o("code",null,"RegExp.prototype.matchAll()",-1),P=o("code",null,"globalThis",-1),R=o("code",null,"Promise.allSettled()",-1),j=o("code",null,"?. , ??",-1),N=o("code",null,"String.prototype.replaceAll()",-1),v=o("code",null,"Promise.any()",-1),V=o("code",null,"AggregateError",-1),I=o("code",null,"??= , &&= , ||=",-1),T=o("code",null,"WeakRef",-1),L=o("code",null,"FinalizationRegistry",-1),F=o("code",null,"1_000",-1),q=o("code",null,"Array.prototype.sort",-1),z=o("code",null,"await",-1),D=o("code",null,"in",-1),G=o("code",null,"d",-1),H=o("code",null,"hasIndices",-1),Q=o("code",null,"Error",-1),W=o("code",null,"cause",-1),K=o("code",null,"Strings、Arrays、TypedArrays",-1),U=o("code",null,"at",-1),X=o("code",null,"Object.hasOwn",-1),Y=o("code",null,"Object.prototype.hasOwnProperty",-1);function Z($,tt){const e=s("RouterLink");return i(),d("div",null,[a,o("p",null,[t("2015 年 6 月发布的 ECMA-262 "),l(e,{to:"/JSBooks/ECMAScript/ES6.html"},{default:c(()=>[t("第 6 版")]),_:1}),t("，俗称 ES6、ES2015 或 ES Harmony。这版包含了可能是这个规范有史以来最重要的一批增强特性。正式支持了 Class、Module、Iterator、Generator("),u,t(")、箭头函数("),p,t(")、Promise、Reflect、Proxy 和 Symbol、Set、Map 等新的数据类型。")]),o("p",null,[t("2016 年 6 月发布的 ECMA-262 "),l(e,{to:"/JSBooks/ECMAScript/ES7.html"},{default:c(()=>[t("第 7 版")]),_:1}),t("，也称 ES7 或 ES2016。新增"),h,t("和指数操作符等特性。")]),o("p",null,[t("2017 年 6 月发布的 ECMA-262 "),l(e,{to:"/JSBooks/ECMAScript/ES8.html"},{default:c(()=>[t("第 8 版")]),_:1}),t("，也称 ES8 或 ES2017。新增了"),S,t("、"),E,t("、"),m,t("、"),A,t("、"),y,t("以及字符串填充方法。")]),o("p",null,[t("2018 年 6 月发布的 ECMA-262 "),l(e,{to:"/JSBooks/ECMAScript/ES9.html"},{default:c(()=>[t("第 9 版")]),_:1}),t("，也称 ES9 或 ES2018。新增了异步迭代(Async Iteration)、Rest/Spread 操作符、正则表达式新特性、"),f,t("以及模板字符串(Template Literals)。")]),o("p",null,[t("2019 年 6 月发布的 ECMA-262 "),l(e,{to:"/JSBooks/ECMAScript/ES10.html"},{default:c(()=>[t("第 10 版")]),_:1}),t("，也称 ES10 或 ES2019。新增了"),M,t("、"),C,t("、"),g,t("、"),k,t("属性、可忽略的 catch 参数、明确定义了"),B,t("方法返回值、固定了"),b,t("的顺序以及解决了 JSON 字符串兼容性问题。")]),o("p",null,[t("2020 年 6 月发布的 ECMA-262 "),l(e,{to:"/JSBooks/ECMAScript/ES11.html"},{default:c(()=>[t("第 11 版")]),_:1}),t("，也称 ES11 或 ES2020。新增了动态"),x,t("、"),J,t("、"),O,t("增强、新的数据类型 BigInt、"),w,t("、"),P,t("、"),R,t("、"),j,t("操作符。")]),o("p",null,[t("2021 年 6 月发布的 ECMA-262 "),l(e,{to:"/JSBooks/ECMAScript/ES12.html"},{default:c(()=>[t("第 12 版")]),_:1}),t("，也称 ES12 或 ES2021。新增了"),N,t("、"),v,t("、"),V,t("用于表示多个错误的集合、新的逻辑操作符"),I,t("、弱引用"),T,t("、"),L,t("用于垃圾回收的注册、数字的分隔符"),F,t("、更加精准的"),q,t("。")]),o("p",null,[t("2022 年 6 月发布的 ECMA-262 "),l(e,{to:"/JSBooks/ECMAScript/ES13.html"},{default:c(()=>[t("第 13 版")]),_:1}),t("，也称 ES13 或 ES2022。模块顶层作用域支持"),z,t("表达式、 新增私有类元素、静态块、"),D,t("操作符支持私有类元素、正则新增"),G,t("标志和其对应的"),H,t("属性、提供了获取捕获组开始索引和结束索引的方法、"),Q,t("实例增加"),W,t("属性，可携带更多错误信息、"),K,t("新增"),U,t("方法，支持关联访问、"),X,t("代替"),Y,t("，判断对象是否含有属性。")])])}const et=n(_,[["render",Z],["__file","index.html.vue"]]);export{et as default};
